// ----------------------------------------------
//        Mobile First Grid - Mixin & classes
// ----------------------------------------------

* {
  box-sizing: border-box;
}

//----- Mixins

// Container
@mixin container() {
  width: $container;
  max-width: $container-max-width;
  margin-right: auto;
  margin-left: auto;
  padding-right: $grid-gutter;
  padding-left: $grid-gutter;
}

@mixin container-full() {
  width: $container;
  max-width: $container-max-width;
  margin-right: auto;
  margin-left: auto;
}

// Row
@mixin row() {
  position: relative;
  margin-right: -$grid-gutter;
  margin-left: -$grid-gutter;

  &:before,
  &:after {
    display: table;
    content: " ";
  }

  &:after {
    clear: both;
  }
}

// Columns
@mixin col($i, $cols: $columns, $size: 'null') {
  position: relative;
  float: left;
  width: ($i / $cols) * 100%;

  @if $size == 's'  {
    padding-right: $grid-gutter-s;
    padding-left: $grid-gutter-s;
  }
  @else if $size == 'm'  {
    padding-right: $grid-gutter-m;
    padding-left: $grid-gutter-m;
  }
  @else if $size == 'l' {
    padding-right: $grid-gutter-l;
    padding-left: $grid-gutter-l;
  }
  @else if $size == 'xl' {
    padding-right: $grid-gutter-xl;
    padding-left: $grid-gutter-xl;
  }
  @else {
    padding-right: $grid-gutter;
    padding-left: $grid-gutter;
  }
}


//----- Classes

// Rows
.row {
  @include row();
}

// Container
.container {
  @include container();
}
.container-full {
  @include container-full();
}

@for $i from 1 through $columns {
  .col-#{$i} {
    @include col($i);
  }
}

// Small Grid
@include breakpoint(s) {
  @for $i from 1 through $columns-s {
    .col-#{$i}-s {
      @include col($i, $size: 's');
    }
  }
}

// Medium Grid
@include breakpoint(m) {
  @for $i from 1 through $columns-m {
    .col-#{$i}-m {
      @include col($i, $size: 'm');
    }
  }
}

// Large Grid
@include breakpoint(l) {
  @for $i from 1 through $columns-l {
    .col-#{$i}-l {
      @include col($i, $size: 'l');
    }
  }
}

// Extra Large Grid
@include breakpoint(xl) {
  @for $i from 1 through $columns-xl {
    .col-#{$i}-xl {
      @include col($i, $size: 'xl');
    }
  }
}

// // Clear Grids
// // Add to .row
// $sizes: 2, 3, 4, 5, 6;
//
// @each $size in $sizes {
//   @include between-breakpoint($breakpoint-s, $breakpoint-m ) {
//     .clear-#{$size}-sm {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include between-breakpoint($breakpoint-s, $breakpoint-l ) {
//     .clear-#{$size}-sl {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include between-breakpoint($breakpoint-m, $breakpoint-xl ) {
//     .clear-#{$size}-sxl {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include between-breakpoint($breakpoint-m, $breakpoint-l ) {
//     .clear-#{$size}-ml {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include between-breakpoint($breakpoint-m, $breakpoint-xl ) {
//     .clear-#{$size}-mxl {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include between-breakpoint($breakpoint-l, $breakpoint-xl ) {
//     .clear-#{$size}-lxl {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include breakpoint(s) {
//     .clear-#{$size}-s {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include breakpoint(m) {
//     .clear-#{$size}-m {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include breakpoint(l) {
//     .clear-#{$size}-l {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
//   @include breakpoint(xl) {
//     .clear-#{$size}-xl {
//       [class*="col"]:nth-child(#{$size}n+1) {
//         clear: both;
//       }
//     }
//   }
// }
